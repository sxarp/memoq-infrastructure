version: 2

defaults: &defaults
    working_directory: ~/repo
    docker:
       - image: google/cloud-sdk:206.0.0
         env:
           - PROJECT_NAME=memoq-backend
           - DEPLOYMENT_NAME=resources-v2
           - RESOURCES_YAML=resources.yaml
           - helm=~/repo/bin/helm

terraform: &terraform
    working_directory: ~/repo/aws
    docker:
       - image: hashicorp/terraform:0.11.8

references:
  - restore_code: &restore_code
      restore_cache:
        key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
  - gcp_restore_dependencies: &gcp_restore_dependencies
      restore_cache:
        key: gcp_dependencies-{{ .Environment.CIRCLE_SHA1 }}

jobs:
  checkout_code:
    <<: *defaults
    steps:
      - checkout
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ./

  gcp_build_dependencies:
    <<: *defaults
    steps:
      - *restore_code
      - *gcp_restore_dependencies
      - run:
          name: install dependencies
          command: |
            export PATH=~/repo/bin:$PATH
            echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
            gcloud config set project $PROJECT_NAME
      - save_cache:
          key: gcp_dependencies-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /root/
  gcp_preview_change:
    <<: *defaults
    steps:
      - *restore_code
      - *gcp_restore_dependencies
      - run:
          name: preview
          command: gcloud deployment-manager deployments update $DEPLOYMENT_NAME --config $RESOURCES_YAML --preview

  gcp_apply_change:
    <<: *defaults
    steps:
      - *restore_code
      - *gcp_restore_dependencies
      - run:
          name: apply
          command: gcloud deployment-manager deployments update $DEPLOYMENT_NAME

  gcp_delete_and_create:
    <<: *defaults
    steps:
      - *restore_code
      - *gcp_restore_dependencies
      - run:
          name: delete
          command: gcloud deployment-manager deployments delete $DEPLOYMENT_NAME -q
      - run:
          name: create
          command: gcloud deployment-manager deployments create $DEPLOYMENT_NAME --config $RESOURCES_YAML
 
  gcp_set_up_cloud_sql_proxy:
    <<: *defaults
    steps:
      - *restore_code
      - *gcp_restore_dependencies
      - run:
          name: helm install
          command: |
            export PATH=~/repo/bin:$PATH
            gcloud container clusters get-credentials resources-v1-my-cluster --zone asia-northeast1-c
            helm init --client-only
            helm repo update
            ./k8s/helm/gcloud-sqlproxy/deploy.sh staging $CLOUD_SQL_SERVICE_ACCOUNT_KEY
  terraform_plan:
    <<: *terraform
    steps:
      - *restore_code
      - run:
          name: set aws credentials
          command: |
            echo $AWS_CREDENTIALS | base64 -d > credentials
      - run: terraform init
      - run: terraform plan
  terraform_apply:
    <<: *terraform
    steps:
      - *restore_code
      - run:
          name: set aws credentials
          command: |
            echo $AWS_CREDENTIALS | base64 -d > credentials
      - run: terraform init
      - run: terraform apply -auto-approve

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - checkout_code
      - gcp_build_dependencies:
          requires:
            - checkout_code
          filters:
            branches:
              only:
                - /gcp\/.*/
                - master
      - gcp_preview_change:
          requires:
            - gcp_build_dependencies
      - gcp_hold_to_apply:
          type: approval
          requires:
            - gcp_preview_change
          # todo: filter branches
          #filters:
          #  branches:
          #    only:
          #      - master
      - gcp_apply_change:
          requires:
            - gcp_hold_to_apply
      - gcp_hold_to_delete_and_create:
          type: approval
          requires:
            - gcp_preview_change
          filters:
            branches:
              only:
                - master
                - /gcp\/hotfix\/.*/
      - gcp_delete_and_create:
          requires:
            - gcp_hold_to_delete_and_create
      - gcp_hold_to_set_up_cloud_sql_proxy:
          type: approval
          requires:
            - gcp_build_dependencies
      - gcp_set_up_cloud_sql_proxy:
          requires:
            - gcp_hold_to_set_up_cloud_sql_proxy
      - terraform_plan:
          requires:
            - checkout_code
          filters:
            branches:
              only:
                - /aws\/.*/
                - master
      - hold_to_terraform_apply:
          type: approval
          requires:
            - terraform_plan
      - terraform_apply:
          requires:
            - hold_to_terraform_apply
          filters:
            branches:
              only:
                - master
